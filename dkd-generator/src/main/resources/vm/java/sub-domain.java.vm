package ${packageName}.domain;

    #foreach ($import in $subImportList)
    import ${import};
    #end
    ## 导入lombok相关注解，用于自动生成getter、setter、构造函数等方法
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
    ## 导入Swagger注解
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.dkd.common.annotation.Excel;
import com.dkd.common.core.domain.BaseEntity;

/**
 * ${subTable.functionName}对象 ${subTableName}
 *
 * @author ${author}
 * @date ${datetime}
 */
    ## 定义注解符号变量，避免velocity模板解析冲突
    #set($at = "@")
    ## Lombok注解：自动生成getter、setter方法
    ${at}Data
    ## Lombok注解：自动生成无参构造函数
    ${at}NoArgsConstructor
    ## Lombok注解：自动生成全参构造函数
    ${at}AllArgsConstructor
    ## Lombok注解：自动生成建造者模式方法
    ${at}Builder
    ## Swagger注解：实体类描述
    ${at}ApiModel("${subTable.functionName}对象")
    ## 实体类定义，继承BaseEntity
public class ${subClassName} extends

BaseEntity {
    private static final long serialVersionUID = 1L;

    #foreach ($column in $subTable.columns)
        #if(!$table.isSuperColumn($column.javaField))
            /** $column.columnComment */
            ## Swagger注解：字段描述
                ${at}ApiModelProperty("$column.columnComment")
            ## 如果字段需要在列表中显示，则添加Excel注解
            #if($column.list)
                ## 处理字段注释中的括号内容，提取纯净的注释文本
                #set($parentheseIndex=$column.columnComment.indexOf("（"))
                #if($parentheseIndex != -1)
                    #set($comment=$column.columnComment.substring(0, $parentheseIndex))
                #else
                    #set($comment=$column.columnComment)
                #end
                ## 根据字段类型和特性添加相应的Excel导出注解
                #if($parentheseIndex != -1)
                @Excel(name = "${comment}", readConverterExp = "$column.readConverterExp()")
                #elseif($column.javaType == 'Date')
                @JsonFormat(pattern = "yyyy-MM-dd")
                @Excel(name = "${comment}", width = 30, dateFormat = "yyyy-MM-dd")
                #else
                @Excel(name = "${comment}")
                #end
            #end
        private $column.javaType $column.javaField;

        #end
    #end
}
